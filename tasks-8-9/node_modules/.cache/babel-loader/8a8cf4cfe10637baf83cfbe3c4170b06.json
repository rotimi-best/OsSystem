{"ast":null,"code":"var _jsxFileName = \"/home/taras/OsSystem/task8-9/reactCourses/src/components/lessons/9/liftingStateUp/3/index.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nconst buttons = [\"first\", \"nano\", \"bob\", \"tomato\"];\n\nclass Index extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeButtonName: \"\"\n    };\n\n    this.clickHandler = name => {\n      this.setState({\n        activeButtonName: name\n      });\n    };\n  }\n\n  render() {\n    const activeButtonName = this.state.activeButtonName;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, buttons.map((i, index) => React.createElement(Button, {\n      clickHandler: this.clickHandler,\n      key: index,\n      name: i,\n      isActive: i === this.state.activeButtonName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    })), React.createElement(Details, {\n      name: activeButtonName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass Button extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      active: false\n    };\n\n    this.clickHandler = () => {\n      this.setState(({\n        active\n      }) => ({\n        active: !active\n      }));\n      this.props.clickHandler(this.props.name);\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          name = _this$props.name,\n          isActive = _this$props.isActive;\n    return React.createElement(\"button\", {\n      onClick: this.clickHandler,\n      style: {\n        color: isActive ? \"red\" : \"blue\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, name);\n  }\n\n}\n\nfunction Details({\n  name\n}) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, name);\n}\n\nconst Task = () => {\n  return React.createElement(Index, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  });\n};\n\nexport default Task;\nIndex.propTypes = {\n  activeButtonName: PropTypes.string\n};\nButton.propTypes = {\n  clickHandler: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  style: PropTypes.objectOf(PropTypes.string)\n};\nDetails.propTypes = {\n  name: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/home/taras/OsSystem/task8-9/reactCourses/src/components/lessons/9/liftingStateUp/3/index.js"],"names":["React","PropTypes","buttons","Index","Component","state","activeButtonName","clickHandler","name","setState","render","map","i","index","Button","active","props","isActive","color","Details","Task","propTypes","string","func","isRequired","style","objectOf"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst buttons = [\"first\", \"nano\", \"bob\", \"tomato\"];\n\nclass Index extends React.Component {\n  state = { activeButtonName: \"\" };\n\n  clickHandler = name => {\n    this.setState({ activeButtonName: name });\n  };\n\n  render() {\n    const { activeButtonName } = this.state;\n    return (\n      <div>\n        {buttons.map((i, index) => (\n          <Button\n            clickHandler={this.clickHandler}\n            key={index}\n            name={i}\n            isActive={i === this.state.activeButtonName}\n          />\n        ))}\n        <Details name={activeButtonName} />\n      </div>\n    );\n  }\n}\n\nclass Button extends React.Component {\n  state = { active: false };\n\n  clickHandler = () => {\n    this.setState(({ active }) => ({ active: !active }));\n    this.props.clickHandler(this.props.name);\n  };\n\n  render() {\n    const { name, isActive } = this.props;\n    \n    return (\n      <button\n        onClick={this.clickHandler}\n        style={{ color: isActive ? \"red\" : \"blue\" }}\n      >\n        {name}\n      </button>\n    );\n  }\n}\n\nfunction Details({ name }) {\n  return <div>{name}</div>;\n}\n\nconst Task = () => {\n  return <Index />;\n};\n\nexport default Task;\n\nIndex.propTypes = {\n  activeButtonName: PropTypes.string\n}\n\nButton.propTypes = {\n  clickHandler: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  style: PropTypes.objectOf(PropTypes.string),\n};\n\nDetails.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n\n"]},"metadata":{},"sourceType":"module"}