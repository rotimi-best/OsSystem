{"ast":null,"code":"var _jsxFileName = \"/home/taras/OsSystem/task8-9/reactCourses/src/components/lessons/9/propTypes/1/index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport blogPosts from './blogPosts.json';\n\nconst Author = ({\n  username,\n  name\n}) => React.createElement(\"div\", {\n  className: \"author\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, \"username: \", username), React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, \"name: \", name));\n\nconst Comment = ({\n  author,\n  comment\n}) => React.createElement(\"li\", {\n  className: \"comment\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, React.createElement(Author, Object.assign({}, author, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}))), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, comment));\n\nconst Comments = ({\n  comments\n}) => React.createElement(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, comments.map(i => React.createElement(Comment, Object.assign({}, i, {\n  key: i.id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}))));\n\nconst BlogPosts = ({\n  posts\n}) => {\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, posts.map(({\n    id,\n    author,\n    body,\n    comments\n  }) => React.createElement(\"section\", {\n    key: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Author, Object.assign({}, author, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, body), React.createElement(Comments, {\n    comments: comments,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }))));\n};\n\nconst Task = () => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(BlogPosts, {\n    posts: blogPosts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }));\n};\n\nexport default Task;\nAuthor.propTypes = {\n  username: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired\n};\nComment.propTypes = {\n  author: PropTypes.shape({\n    username: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired\n  }),\n  comment: PropTypes.string.isRequired\n};\nComments.propTypes = {\n  comments: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    author: PropTypes.shape({\n      username: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired\n    }),\n    comment: PropTypes.string.isRequired\n  }))\n};\nBlogPosts.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    author: PropTypes.shape({\n      username: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired\n    }),\n    body: PropTypes.string.isRequired,\n    comments: PropTypes.arrayOf(PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      author: PropTypes.shape({\n        username: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired\n      }),\n      comment: PropTypes.string.isRequired\n    }))\n  }))\n};","map":{"version":3,"sources":["/home/taras/OsSystem/task8-9/reactCourses/src/components/lessons/9/propTypes/1/index.js"],"names":["React","PropTypes","blogPosts","Author","username","name","Comment","author","comment","Comments","comments","map","i","id","BlogPosts","posts","body","Task","propTypes","string","isRequired","shape","arrayOf"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport blogPosts from './blogPosts.json';\n\nconst Author = ({ username, name }) => (\n  <div className=\"author\" >\n    <div>username: {username}</div>\n    <div>name: {name}</div>\n  </div>\n);\n\nconst Comment = ({ author, comment }) => (\n  <li className=\"comment\" >\n    <div><Author {...author} /></div>\n    <p>{comment}</p>\n  </li>\n);\n\nconst Comments = ({ comments }) => (\n  <ul>\n    {comments.map(i => (<Comment {...i} key={i.id} />))}\n  </ul>\n);\n\n\nconst BlogPosts = ({ posts }) => {\n  return (\n    <React.Fragment>\n      {posts.map(({ id, author, body, comments }) => (\n        <section key={id} >\n          <Author {...author} />\n          <p>{body}</p>\n          <Comments comments={comments} />\n        </section>\n      ))}\n    </React.Fragment>\n  );\n};\n\nconst Task = () => {\n  return (\n    <div>\n      <BlogPosts posts={blogPosts} />\n    </div>\n  );\n};\n\nexport default Task;\n\n\nAuthor.propTypes = {\n  username: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired\n};\n\nComment.propTypes = {\n  author: PropTypes.shape({\n    username: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired\n  }),\n  comment: PropTypes.string.isRequired\n}\n\nComments.propTypes = {\n  comments: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      author: PropTypes.shape({\n        username:PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired\n      }),\n      comment: PropTypes.string.isRequired\n    })\n  )\n}\n\nBlogPosts.propTypes = {\n  posts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      author: PropTypes.shape({\n        username:PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired\n      }),\n      body: PropTypes.string.isRequired,\n      comments: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.string.isRequired,\n          author: PropTypes.shape({\n            username:PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired\n          }),\n          comment: PropTypes.string.isRequired\n        })\n      )\n    })\n  )\n}\n"]},"metadata":{},"sourceType":"module"}