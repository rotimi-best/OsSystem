{"ast":null,"code":"var _jsxFileName = \"/home/taras/OsSystem/task8/reactCourses/src/components/lessons/9/fragments/1/index.js\";\nimport React from 'react';\nimport faker from 'faker';\nimport Chance from 'chance';\nconst MIN_ID = 0;\nconst MAX_ID = 400;\nconst MIN_COUNT = 5;\nconst chance = Chance();\n\nconst generateData = count => {\n  const ids = chance.unique(chance.integer, count, {\n    min: MIN_ID,\n    max: MAX_ID\n  });\n  return ids.map(id => ({\n    id: id,\n    title: faker.lorem.sentence(),\n    body: faker.lorem.paragraphs(2)\n  }));\n};\n\nconst data = generateData(MIN_COUNT);\n\nconst Articles = ({\n  data\n}) => {\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Articles\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, data.map(({\n    title,\n    body\n  }) => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, title), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, body)))));\n};\n\nconst Task = () => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Articles, {\n    data: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }));\n};\n\nexport default Task;","map":{"version":3,"sources":["/home/taras/OsSystem/task8/reactCourses/src/components/lessons/9/fragments/1/index.js"],"names":["React","faker","Chance","MIN_ID","MAX_ID","MIN_COUNT","chance","generateData","count","ids","unique","integer","min","max","map","id","title","lorem","sentence","body","paragraphs","data","Articles","Task"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,MAAMC,MAAM,GAAG,CAAf;AACA,MAAMC,MAAM,GAAG,GAAf;AAEA,MAAMC,SAAS,GAAG,CAAlB;AAEA,MAAMC,MAAM,GAAGJ,MAAM,EAArB;;AAEA,MAAMK,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAMC,GAAG,GAAGH,MAAM,CAACI,MAAP,CAAcJ,MAAM,CAACK,OAArB,EAA8BH,KAA9B,EAAqC;AAC/CI,IAAAA,GAAG,EAAET,MAD0C;AAE/CU,IAAAA,GAAG,EAAET;AAF0C,GAArC,CAAZ;AAIA,SAAOK,GAAG,CAACK,GAAJ,CAAQC,EAAE,KACf;AAAEA,IAAAA,EAAE,EAAEA,EAAN;AAAUC,IAAAA,KAAK,EAAEf,KAAK,CAACgB,KAAN,CAAYC,QAAZ,EAAjB;AAAyCC,IAAAA,IAAI,EAAElB,KAAK,CAACgB,KAAN,CAAYG,UAAZ,CAAuB,CAAvB;AAA/C,GADe,CAAV,CAAP;AAGD,CARD;;AAUA,MAAMC,IAAI,GAAGd,YAAY,CAACF,SAAD,CAAzB;;AAEA,MAAMiB,QAAQ,GAAG,CAAC;AAAED,EAAAA;AAAF,CAAD,KAAc;AAE7B,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IAAI,CAACP,GAAL,CAAS,CAAC;AAAEE,IAAAA,KAAF;AAASG,IAAAA;AAAT,GAAD,KACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,KAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIG,IAAJ,CAFF,CADD,CADH,CAFF,CADF;AAcD,CAhBD;;AAkBA,MAAMI,IAAI,GAAG,MAAM;AACjB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEF,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAND;;AAQA,eAAeE,IAAf","sourcesContent":["import React from 'react';\n\nimport faker from 'faker';\nimport Chance from 'chance';\n\nconst MIN_ID = 0;\nconst MAX_ID = 400;\n\nconst MIN_COUNT = 5;\n\nconst chance = Chance();\n\nconst generateData = (count) => {\n  const ids = chance.unique(chance.integer, count, {\n    min: MIN_ID,\n    max: MAX_ID\n  });\n  return ids.map(id => (\n    { id: id, title: faker.lorem.sentence(), body: faker.lorem.paragraphs(2) }\n  ));\n};\n\nconst data = generateData(MIN_COUNT);\n\nconst Articles = ({ data }) => {\n  \n  return (\n    <React.Fragment>\n      <h1>Articles</h1>\n      <div>\n        {data.map(({ title, body }) => (\n          <div>\n            <h3>{title}</h3>\n            <p>{body}</p>\n          </div>  \n        ))}\n      </div>\n    </React.Fragment>\n    \n  );\n}\n\nconst Task = () => {\n  return (\n    <div>\n      <Articles data={data} />\n    </div>\n  );\n};\n\nexport default Task;\n"]},"metadata":{},"sourceType":"module"}