{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/taras/OsSystem/task8-9/reactCourses/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/taras/OsSystem/task8-9/reactCourses/src/components/lessons/9/liftingStateUp/2/index.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  margin-left: 10px;\\n  font-size: 12px;\\n  font-weight: regular;\\n  font-style: italic;\\n  color: #aaaaaa;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  color: #001f3f;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport Chance from 'chance';\nimport faker from 'faker';\nimport styled from 'styled-components';\nimport { Switch, Route, Link, useRouteMatch } from 'react-router-dom';\nimport { SearchableList as List } from './components';\nconst MIN_ID = 0;\nconst MAX_ID = 400;\nconst MIN_COUNT = 15;\nconst chance = Chance();\nconst Header = styled.h3(_templateObject());\nconst Label = styled.span(_templateObject2());\n\nconst refreshData = count => {\n  const ids = chance.unique(chance.integer, count, {\n    min: MIN_ID,\n    max: MAX_ID\n  });\n  const data = ids.map(id => {\n    return {\n      id: id,\n      name: faker.company.companyName()\n    };\n  });\n  return data;\n};\n\nconst list = refreshData(MIN_COUNT);\n\nfunction Task() {\n  const _useRouteMatch = useRouteMatch(),\n        url = _useRouteMatch.url;\n\n  const listPath = \"\".concat(url, \"/list\");\n  const match = useRouteMatch(listPath);\n  return React.createElement(\"div\", {\n    className: \"task\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, !match && React.createElement(Link, {\n    to: listPath,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"list\"), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: listPath,\n    exact: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"back to task page\"), React.createElement(List, {\n    list: list,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, list.length, \" items\")));\n}\n\nexport default Task;","map":{"version":3,"sources":["/home/taras/OsSystem/task8-9/reactCourses/src/components/lessons/9/liftingStateUp/2/index.js"],"names":["React","Chance","faker","styled","Switch","Route","Link","useRouteMatch","SearchableList","List","MIN_ID","MAX_ID","MIN_COUNT","chance","Header","h3","Label","span","refreshData","count","ids","unique","integer","min","max","data","map","id","name","company","companyName","list","Task","url","listPath","match","length"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA8BC,aAA9B,QAAmD,kBAAnD;AAEA,SAASC,cAAc,IAAIC,IAA3B,QAAuC,cAAvC;AAGA,MAAMC,MAAM,GAAG,CAAf;AACA,MAAMC,MAAM,GAAG,GAAf;AAEA,MAAMC,SAAS,GAAG,EAAlB;AAEA,MAAMC,MAAM,GAAGZ,MAAM,EAArB;AAEA,MAAMa,MAAM,GAAGX,MAAM,CAACY,EAAV,mBAAZ;AAIA,MAAMC,KAAK,GAAGb,MAAM,CAACc,IAAV,oBAAX;;AAQA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3B,QAAMC,GAAG,GAAGP,MAAM,CAACQ,MAAP,CAAcR,MAAM,CAACS,OAArB,EAA8BH,KAA9B,EAAqC;AAC/CI,IAAAA,GAAG,EAAEb,MAD0C;AAE/Cc,IAAAA,GAAG,EAAEb;AAF0C,GAArC,CAAZ;AAIA,QAAMc,IAAI,GAAGL,GAAG,CAACM,GAAJ,CAAQC,EAAE,IAAI;AACzB,WAAO;AAAEA,MAAAA,EAAE,EAAEA,EAAN;AAAUC,MAAAA,IAAI,EAAE1B,KAAK,CAAC2B,OAAN,CAAcC,WAAd;AAAhB,KAAP;AACD,GAFY,CAAb;AAGA,SAAOL,IAAP;AACD,CATD;;AAWA,MAAMM,IAAI,GAAGb,WAAW,CAACN,SAAD,CAAxB;;AAEA,SAASoB,IAAT,GAAgB;AAAA,yBACEzB,aAAa,EADf;AAAA,QACN0B,GADM,kBACNA,GADM;;AAGd,QAAMC,QAAQ,aAAMD,GAAN,UAAd;AAEA,QAAME,KAAK,GAAG5B,aAAa,CAAC2B,QAAD,CAA3B;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACC,KAAD,IAAU,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAED,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADb,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEA,QAAb;AAAuB,IAAA,KAAK,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAED,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEF,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CAFF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQA,IAAI,CAACK,MAAb,WATF,CADF,CADF;AAeD;;AAED,eAAeJ,IAAf","sourcesContent":["import React from 'react';\nimport Chance from 'chance';\nimport faker from 'faker';\nimport styled from 'styled-components';\nimport { Switch, Route, Link, useRouteMatch } from 'react-router-dom';\n\nimport { SearchableList as List } from './components';\n\n\nconst MIN_ID = 0;\nconst MAX_ID = 400;\n\nconst MIN_COUNT = 15;\n\nconst chance = Chance();\n\nconst Header = styled.h3`\n  color: #001f3f;\n`;\n\nconst Label = styled.span`\n  margin-left: 10px;\n  font-size: 12px;\n  font-weight: regular;\n  font-style: italic;\n  color: #aaaaaa;\n`;\n\nconst refreshData = count => {\n  const ids = chance.unique(chance.integer, count, {\n    min: MIN_ID,\n    max: MAX_ID\n  });\n  const data = ids.map(id => {\n    return { id: id, name: faker.company.companyName() };\n  });\n  return data;\n};\n\nconst list = refreshData(MIN_COUNT);\n\nfunction Task() {\n  const { url } = useRouteMatch();\n\n  const listPath = `${url}/list`;\n\n  const match = useRouteMatch(listPath);\n\n  return (\n    <div className=\"task\">\n      <Header>\n        {!match && <Link to={listPath} >list</Link>}\n        <Switch>\n          <Route path={listPath} exact >\n            <Link to={url} >back to task page</Link>\n            <List list={list} />\n          </Route>\n        </Switch>\n        <br/>\n        <Label>{list.length} items</Label>\n      </Header>\n    </div>\n  );\n}\n\nexport default Task;\n"]},"metadata":{},"sourceType":"module"}