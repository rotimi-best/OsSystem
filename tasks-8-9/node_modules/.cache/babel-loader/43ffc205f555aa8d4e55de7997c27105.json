{"ast":null,"code":"var _jsxFileName = \"/home/taras/OsSystem/task8/reactCourses/src/components/content/index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Link } from 'react-router-dom';\nimport { Accordion, AccordionItem, AccordionItemHeading, AccordionItemButton, AccordionItemPanel } from './styled';\nimport lesson8 from '../../data/lesson8.json';\nimport lesson9 from '../../data/lesson9.json';\nimport lessonsTasks from '../lessons';\nconst lessons = [lesson8, lesson9];\n\nconst renderTopics = (topics, lessonName) => {\n  return React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, topics.map(({\n    name: topicName,\n    title,\n    tasks\n  }) => React.createElement(\"li\", {\n    key: topicName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, title), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, tasks.map((task, index) => {\n    const path = getTaskPath(lessonName, topicName, index);\n    const Component = getTaskComponent(lessonName, topicName, index);\n    if (!Component) return null;\n    const descriptionPath = getTaskDescriptionPath(lessonName, topicName, index);\n    const Description = getDescriptionComponent(lessonName, topicName, index);\n    return React.createElement(\"li\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: path,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, task.name), \"\\xA0\", Description && React.createElement(Link, {\n      to: descriptionPath,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"(description)\"));\n  })))));\n};\n\nconst Content = ({\n  preExpandedLessons = ['8'],\n  setExpandedLessons\n}) => {\n  return React.createElement(Accordion, {\n    preExpanded: preExpandedLessons,\n    allowZeroExpanded: true,\n    onChange: setExpandedLessons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, lessons.map(lesson => React.createElement(AccordionItem, {\n    key: lesson.name,\n    uuid: lesson.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(AccordionItemHeading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(AccordionItemButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, lesson.title))), React.createElement(AccordionItemPanel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, renderTopics(lesson.topics, lesson.name)))));\n};\n\nContent.propTypes = {\n  preExpandedLessons: PropTypes.arrayOf(PropTypes.string),\n  setExpandedLessons: PropTypes.func.isRequired\n};\nexport default Content;\nexport const renderRoutes = () => {\n  const routes = [];\n  lessons.forEach(lesson => {\n    const lessonName = lesson.name,\n          topics = lesson.topics;\n    topics.forEach(topic => {\n      const topicName = topic.name,\n            tasks = topic.tasks;\n      tasks.forEach((task, index) => {\n        const path = getTaskPath(lessonName, topicName, index);\n        const Component = getTaskComponent(lessonName, topicName, index);\n        const descriptionPath = getTaskDescriptionPath(lessonName, topicName, index);\n        const Description = getDescriptionComponent(lessonName, topicName, index);\n\n        if (Component) {\n          routes.push(React.createElement(Route, {\n            key: topicName + index,\n            path: path,\n            component: Component,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          }));\n\n          if (Description) {\n            routes.push(React.createElement(Route, {\n              key: topicName + index + 'description',\n              exact: true,\n              path: descriptionPath,\n              component: Description,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 86\n              },\n              __self: this\n            }));\n          }\n        }\n      });\n    });\n  });\n  return routes;\n};\n\nfunction getTaskPath(lessonName, topicName, taskNum) {\n  return \"/lesson\".concat(lessonName, \"/\").concat(topicName, \"/task\").concat(taskNum + 1);\n}\n\nfunction getTaskDescriptionPath(lessonName, topicName, taskNum) {\n  return \"/lesson\".concat(lessonName, \"/\").concat(topicName, \"/description\").concat(taskNum + 1);\n}\n\nfunction getTaskComponent(lessonName, topicName, taskNum) {\n  const lessonTasks = lessonsTasks[lessonName];\n  if (!lessonTasks || !lessonTasks[topicName]) return null;\n  const Component = lessonTasks[topicName][taskNum] && lessonTasks[topicName][taskNum].task;\n  return Component ? Component : null;\n}\n\nfunction getDescriptionComponent(lessonName, topicName, taskNum) {\n  const lessonTasks = lessonsTasks[lessonName];\n  if (!lessonTasks || !lessonTasks[topicName]) return null;\n  const Component = lessonTasks[topicName][taskNum] && lessonTasks[topicName][taskNum].description;\n  return Component ? Component : null;\n}","map":{"version":3,"sources":["/home/taras/OsSystem/task8/reactCourses/src/components/content/index.js"],"names":["React","PropTypes","Route","Link","Accordion","AccordionItem","AccordionItemHeading","AccordionItemButton","AccordionItemPanel","lesson8","lesson9","lessonsTasks","lessons","renderTopics","topics","lessonName","map","name","topicName","title","tasks","task","index","path","getTaskPath","Component","getTaskComponent","descriptionPath","getTaskDescriptionPath","Description","getDescriptionComponent","Content","preExpandedLessons","setExpandedLessons","lesson","propTypes","arrayOf","string","func","isRequired","renderRoutes","routes","forEach","topic","push","taskNum","lessonTasks","description"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Link } from 'react-router-dom';\nimport {\n  Accordion, AccordionItem, AccordionItemHeading, AccordionItemButton, AccordionItemPanel,\n} from './styled';\nimport lesson8 from '../../data/lesson8.json';\nimport lesson9 from '../../data/lesson9.json';\nimport lessonsTasks from '../lessons';\n\nconst lessons = [lesson8, lesson9];\n\nconst renderTopics = (topics, lessonName) => {\n  return (\n    <ul>\n      {topics.map(({name: topicName, title, tasks}) => (\n        <li key={topicName} >\n          <h2>{title}</h2>\n          <ul>\n            {tasks.map((task, index) => {\n              const path = getTaskPath(lessonName, topicName, index);\n              const Component = getTaskComponent(lessonName, topicName, index);\n              if (!Component) return null;\n\n              const descriptionPath = getTaskDescriptionPath(lessonName, topicName, index);\n              const Description = getDescriptionComponent(lessonName, topicName, index);\n\n              return (\n                <li key={index} >\n                  <Link to={path} >{task.name}</Link>\n                  &nbsp;\n                  {Description && (<Link to={descriptionPath} >(description)</Link>)}\n                </li>\n              );\n            })}\n          </ul>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nconst Content = ({ preExpandedLessons = ['8'], setExpandedLessons }) => {\n  return (\n    <Accordion preExpanded={preExpandedLessons} allowZeroExpanded={true} onChange={setExpandedLessons} >\n      {lessons.map((lesson) => (\n        <AccordionItem key={lesson.name} uuid={lesson.name} >\n          <AccordionItemHeading>\n            <AccordionItemButton>\n              <h1>{lesson.title}</h1>\n            </AccordionItemButton>\n          </AccordionItemHeading>\n          <AccordionItemPanel>\n            {renderTopics(lesson.topics, lesson.name)}\n          </AccordionItemPanel>\n        </AccordionItem>\n      ))}\n    </Accordion>\n  );\n};\n\nContent.propTypes = {\n  preExpandedLessons: PropTypes.arrayOf(PropTypes.string),\n  setExpandedLessons: PropTypes.func.isRequired,\n};\n\n\nexport default Content;\n\nexport const renderRoutes = () => {\n  const routes = [];\n  lessons.forEach(lesson => {\n    const { name: lessonName, topics } = lesson;\n    topics.forEach(topic => {\n      const {name: topicName, tasks} = topic;\n      tasks.forEach((task, index) => {\n        const path = getTaskPath(lessonName, topicName, index);\n        const Component = getTaskComponent(lessonName, topicName, index);\n\n        const descriptionPath = getTaskDescriptionPath(lessonName, topicName, index);\n        const Description = getDescriptionComponent(lessonName, topicName, index);\n\n        if (Component) {\n          routes.push(<Route key={topicName + index} path={path} component={Component} />);\n          if (Description) {\n            routes.push(<Route key={topicName + index + 'description'} exact path={descriptionPath} component={Description} />);\n          }\n        }\n      });\n    });\n  });\n  return routes;\n};\n\nfunction getTaskPath(lessonName, topicName, taskNum) {\n  return `/lesson${lessonName}/${topicName}/task${taskNum + 1}`;\n}\n\nfunction getTaskDescriptionPath(lessonName, topicName, taskNum) {\n  return `/lesson${lessonName}/${topicName}/description${taskNum + 1}`;\n}\n\nfunction getTaskComponent(lessonName, topicName, taskNum) {\n  const lessonTasks = lessonsTasks[lessonName];\n  if (!lessonTasks || !lessonTasks[topicName]) return null;\n  const Component = lessonTasks[topicName][taskNum] && lessonTasks[topicName][taskNum].task;\n  return Component ? Component : null;\n}\n\nfunction getDescriptionComponent(lessonName, topicName, taskNum) {\n  const lessonTasks = lessonsTasks[lessonName];\n  if (!lessonTasks || !lessonTasks[topicName]) return null;\n  const Component = lessonTasks[topicName][taskNum] && lessonTasks[topicName][taskNum].description;\n  return Component ? Component : null;\n}\n"]},"metadata":{},"sourceType":"module"}