{"ast":null,"code":"var _jsxFileName = \"/home/taras/OsSystem/task8/reactCourses/src/components/lessons/9/propTypes/1/index.js\";\nimport React, { PropTypes } from 'react';\nimport blogPosts from './blogPosts.json';\n\nconst Author = ({\n  username,\n  name\n}) => React.createElement(\"div\", {\n  className: \"author\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, \"username: \", this.username), React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, \"name: \", this.name));\n\nAuthor.propTypes = {\n  username: PropTypes.string,\n  name: PropTypes.string\n};\n\nconst Comment = ({\n  author,\n  comment\n}) => React.createElement(\"li\", {\n  className: \"comment\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, React.createElement(Author, Object.assign({}, author, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}))), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, comment));\n\nComment.propTypes = {\n  author: PropTypes.object({\n    username: PropTypes.string,\n    name: PropTypes.string\n  }),\n  comment: PropTypes.string\n};\n\nconst Comments = ({\n  comments\n}) => React.createElement(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, comments.map(i => React.createElement(Comment, Object.assign({}, i, {\n  key: i.id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}))));\n\nconst BlogPosts = ({\n  posts\n}) => {\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, posts.map(({\n    id,\n    author,\n    body,\n    comments\n  }) => React.createElement(\"section\", {\n    key: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Author, Object.assign({}, author, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, body), React.createElement(Comments, {\n    comments: comments,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }))));\n};\n\nconst Task = () => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(BlogPosts, {\n    posts: blogPosts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }));\n};\n\nexport default Task;","map":{"version":3,"sources":["/home/taras/OsSystem/task8/reactCourses/src/components/lessons/9/propTypes/1/index.js"],"names":["React","PropTypes","blogPosts","Author","username","name","propTypes","string","Comment","author","comment","object","Comments","comments","map","i","id","BlogPosts","posts","body","Task"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,kBAAtB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KACb;AAAK,EAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAgB,KAAKD,QAArB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAY,KAAKC,IAAjB,CAFF,CADF;;AAOAF,MAAM,CAACG,SAAP,GAAmB;AACjBF,EAAAA,QAAQ,EAAEH,SAAS,CAACM,MADH;AAEjBF,EAAAA,IAAI,EAAEJ,SAAS,CAACM;AAFC,CAAnB;;AAKA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KACd;AAAI,EAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAK,oBAAC,MAAD,oBAAYD,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAIC,OAAJ,CAFF,CADF;;AAOAF,OAAO,CAACF,SAAR,GAAoB;AAClBG,EAAAA,MAAM,EAAER,SAAS,CAACU,MAAV,CAAiB;AACvBP,IAAAA,QAAQ,EAAEH,SAAS,CAACM,MADG;AAEvBF,IAAAA,IAAI,EAAEJ,SAAS,CAACM;AAFO,GAAjB,CADU;AAKlBG,EAAAA,OAAO,EAAET,SAAS,CAACM;AALD,CAApB;;AAQA,MAAMK,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGA,QAAQ,CAACC,GAAT,CAAaC,CAAC,IAAK,oBAAC,OAAD,oBAAaA,CAAb;AAAgB,EAAA,GAAG,EAAEA,CAAC,CAACC,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB,CADH,CADF;;AAOA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC/B,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACJ,GAAN,CAAU,CAAC;AAAEE,IAAAA,EAAF;AAAMP,IAAAA,MAAN;AAAcU,IAAAA,IAAd;AAAoBN,IAAAA;AAApB,GAAD,KACT;AAAS,IAAA,GAAG,EAAEG,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD,oBAAYP,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIU,IAAJ,CAFF,EAGE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEN,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADD,CADH,CADF;AAWD,CAZD;;AAcA,MAAMO,IAAI,GAAG,MAAM;AACjB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAElB,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAND;;AAQA,eAAekB,IAAf","sourcesContent":["import React, {PropTypes} from 'react';\nimport blogPosts from './blogPosts.json';\n\nconst Author = ({ username, name }) => (\n  <div className=\"author\" >\n    <div>username: {this.username}</div>\n    <div>name: {this.name}</div>\n  </div>\n);\n\nAuthor.propTypes = {\n  username: PropTypes.string,\n  name: PropTypes.string\n};\n\nconst Comment = ({ author, comment }) => (\n  <li className=\"comment\" >\n    <div><Author {...author} /></div>\n    <p>{comment}</p>\n  </li>\n);\n\nComment.propTypes = {\n  author: PropTypes.object({\n    username: PropTypes.string,\n    name: PropTypes.string\n  }),\n  comment: PropTypes.string\n}\n\nconst Comments = ({ comments }) => (\n  <ul>\n    {comments.map(i => (<Comment {...i} key={i.id} />))}\n  </ul>\n);\n\n\nconst BlogPosts = ({ posts }) => {\n  return (\n    <React.Fragment>\n      {posts.map(({ id, author, body, comments }) => (\n        <section key={id} >\n          <Author {...author} />\n          <p>{body}</p>\n          <Comments comments={comments} />\n        </section>\n      ))}\n    </React.Fragment>\n  );\n};\n\nconst Task = () => {\n  return (\n    <div>\n      <BlogPosts posts={blogPosts} />\n    </div>\n  );\n};\n\nexport default Task;\n"]},"metadata":{},"sourceType":"module"}