{"ast":null,"code":"var _jsxFileName = \"/home/taras/OsSystem/task8/reactCourses/src/components/lessons/8/common/1/index.js\";\nimport React from 'react';\nimport './style.css';\nconst list = [{\n  title: 'React',\n  url: 'https://reactjs.org/',\n  author: 'Jordan Walke',\n  id: 0\n}, {\n  title: 'Redux',\n  url: 'https://redux.js.org/',\n  author: 'Dan Abramov, Andrew Clark',\n  id: 1\n}];\n\nconst isSearched = searchTerm => item => item.title.toLowerCase().includes(searchTerm.toLowerCase());\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n    const list = props.list;\n    this.state = {\n      list,\n      searchTerm: ''\n    };\n  }\n\n  onSearchChange(event) {\n    const value = ''; // your code is here\n\n    console.log(event);\n    this.setState({\n      searchTerm: value\n    });\n  }\n\n  onDismiss(e) {\n    const itemId = ''; // your code is here\n\n    console.log(e);\n    const updatedList = this.state.list.filter(item => item.id !== itemId);\n    this.setState({\n      list: updatedList\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.onSearchChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })), React.createElement(\"ul\", {\n      className: \"items-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.state.list.filter(isSearched(this.state.searchTerm)).map(item => {\n      const id = item.id,\n            url = item.url,\n            title = item.title,\n            author = item.author;\n      return React.createElement(\"li\", {\n        className: \"list-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, title), \" -\", \" \".concat(author)), React.createElement(\"button\", {\n        onClick: this.onDismiss,\n        type: \"button\",\n        \"data-id\": id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Dismiss\"));\n    })));\n  }\n\n}\n\nconst Task = () => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Search, {\n    list: list,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }));\n};\n\nexport default Task;","map":{"version":3,"sources":["/home/taras/OsSystem/task8/reactCourses/src/components/lessons/8/common/1/index.js"],"names":["React","list","title","url","author","id","isSearched","searchTerm","item","toLowerCase","includes","Search","Component","constructor","props","state","onSearchChange","event","value","console","log","setState","onDismiss","e","itemId","updatedList","filter","render","map","Task"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport './style.css';\n\nconst list = [\n  {\n    title: 'React',\n    url: 'https://reactjs.org/',\n    author: 'Jordan Walke',\n    id: 0,\n  },\n  {\n    title: 'Redux',\n    url: 'https://redux.js.org/',\n    author: 'Dan Abramov, Andrew Clark',\n    id: 1,\n  },\n];\n\nconst isSearched = searchTerm => item => item.title.toLowerCase().includes(searchTerm.toLowerCase());\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n    const { list } = props;\n    this.state = {\n      list,\n      searchTerm: '',\n    };\n  }\n\n  onSearchChange(event) {\n    const value = '';// your code is here\n    console.log(event);\n    this.setState({ searchTerm: value });\n  }\n\n  onDismiss(e) {\n    const itemId = '';// your code is here\n    console.log(e);\n    const updatedList = this.state.list.filter(item => item.id !== itemId);\n    this.setState({ list: updatedList });\n  }\n\n  render() {\n    return (\n      <div className=\"search\">\n        <form>\n          <input\n            type=\"text\"\n            onChange={this.onSearchChange}\n          />\n        </form>\n        <ul className=\"items-list\" >\n          {this.state.list.filter(isSearched(this.state.searchTerm)).map(item => {\n            const { id, url, title, author } = item;\n            return (\n              <li className=\"list-item\" >\n                <span>\n                  <a href={url}>{title}</a> -\n                  {` ${author}`}\n                </span>\n                <button\n                  onClick={this.onDismiss}\n                  type=\"button\"\n                  data-id={id}\n                >\n                  Dismiss\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst Task = () => {\n  return (\n    <div>\n      <Search list={list} />\n    </div>\n  );\n};\n\nexport default Task;\n"]},"metadata":{},"sourceType":"module"}