{"ast":null,"code":"var _jsxFileName = \"/home/taras/OsSystem/task8/reactCourses/src/components/lessons/9/propTypes/2/index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport data from './data.json';\n\nconst PersonalInfo = ({\n  data\n}) => React.createElement(\"div\", {\n  className: \"personalInfo\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, React.createElement(\"pre\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, JSON.stringify(data, null, 2)));\n\nclass ShowPersonalInfo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedCompanyId: 'disabled'\n    };\n\n    this.onSelect = e => {\n      const selectedCompanyId = e.target.value;\n      this.setState({\n        selectedCompanyId\n      });\n    };\n  }\n\n  render() {\n    const companies = this.props.companies;\n    const selectedCompanyId = this.state.selectedCompanyId;\n    const companyData = companies.find(i => selectedCompanyId === i._id);\n    return React.createElement(React.Fragment, null, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Select person dossier\"), React.createElement(\"select\", {\n      value: selectedCompanyId,\n      onChange: this.onSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      key: \"disabled\",\n      disabled: true,\n      value: \"disabled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), companies.map(i => React.createElement(\"option\", {\n      key: i._id,\n      value: i._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, i._id))), companyData && React.createElement(PersonalInfo, {\n      data: companyData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst Task = () => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(ShowPersonalInfo, {\n    companies: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }));\n};\n\nexport default Task;\nPersonalInfo.propTypes = {\n  id: PropTypes.string.isRequired,\n  guid: PropTypes.string.isRequired,\n  isActive: PropTypes.bool.isRequired,\n  balance: PropTypes.string.isRequired,\n  age: PropTypes.number.isRequired,\n  name: PropTypes.shape({\n    first: PropTypes.string.isRequired,\n    last: PropTypes.string.isRequired\n  }),\n  company: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  latitude: PropTypes.string.isRequired,\n  longitude: PropTypes.string.isRequired,\n  tags: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  range: PropTypes.arrayOf(PropTypes.number),\n  friends: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired\n  }))\n};","map":{"version":3,"sources":["/home/taras/OsSystem/task8/reactCourses/src/components/lessons/9/propTypes/2/index.js"],"names":["React","PropTypes","data","PersonalInfo","JSON","stringify","ShowPersonalInfo","Component","state","selectedCompanyId","onSelect","e","target","value","setState","render","companies","props","companyData","find","i","_id","map","Task","propTypes","id","string","isRequired","guid","isActive","bool","balance","age","number","name","shape","first","last","company","email","latitude","longitude","tags","oneOfType","range","arrayOf","friends"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport data from './data.json';\n\nconst PersonalInfo = ({ data }) => (\n  <div className=\"personalInfo\" >\n    <pre>{JSON.stringify(data, null, 2)}</pre>\n  </div>\n);\n\nclass ShowPersonalInfo extends React.Component {\n  state = {selectedCompanyId: 'disabled'}\n\n  onSelect = (e) => {\n    const selectedCompanyId = e.target.value;\n    this.setState({selectedCompanyId})\n  }\n\n  render() {\n    const { companies } = this.props;\n    const { selectedCompanyId } = this.state;\n    const companyData = companies.find(i => selectedCompanyId === i._id);\n    return (\n      <>\n        <h3>Select person dossier</h3>\n        <select value={selectedCompanyId} onChange={this.onSelect} >\n          <option key=\"disabled\" disabled value=\"disabled\" ></option>\n          {companies.map(i => (<option key={i._id} value={i._id} >{i._id}</option>))}\n        </select>\n        {companyData && <PersonalInfo data={companyData} />}\n      </>\n    );\n  }\n}\n\n\n\nconst Task = () => {\n  return (\n    <div>\n      <ShowPersonalInfo companies={data} />\n    </div>\n  );\n};\n\nexport default Task;\n\nPersonalInfo.propTypes = {\n  id: PropTypes.string.isRequired,\n  guid: PropTypes.string.isRequired,\n  isActive: PropTypes.bool.isRequired,\n  balance: PropTypes.string.isRequired,\n  age: PropTypes.number.isRequired,\n  name: PropTypes.shape({\n    first: PropTypes.string.isRequired,\n    last: PropTypes.string.isRequired\n  }),\n  company: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  latitude: PropTypes.string.isRequired,\n  longitude: PropTypes.string.isRequired,\n  tags: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number\n  ]),\n  range: PropTypes.arrayOf(PropTypes.number),\n  friends: PropTypes.arrayOf(PropTypes.shape({\n    id:PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired\n  }))\n}"]},"metadata":{},"sourceType":"module"}