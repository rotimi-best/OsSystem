{"ast":null,"code":"var _jsxFileName = \"/home/taras/OsSystem/task8/reactCourses/src/components/lessons/8/forms/3/index.js\";\nimport React from 'react';\n\nclass UncontrolledForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const emailRef = this.emailRef,\n            agreeRef = this.agreeRef;\n      const email = emailRef.current.value;\n      const agreeCheckbox = agreeRef.current.checked;\n\n      if (!email) {\n        alert(\"entry valid email first, please\");\n      }\n\n      if (agreeCheckbox) {\n        alert(\"email: \".concat(email));\n      } else {\n        alert(\"agree, please\");\n      }\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.emailRef = React.createRef();\n    this.agreeRef = React.createRef();\n  }\n\n  render() {\n    const emailRef = this.emailRef,\n          agreeRef = this.agreeRef;\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"email\",\n      ref: emailRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"checkbox\",\n      ref: agreeRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass ControlledForm extends React.Component {\n  // your code is here\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\",\n      isAgree: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChangeCheckbox = this.handleChangeCheckbox.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    if (this.state.isAgree) {\n      alert(\"Email was submitted: \" + this.state.value);\n    } else {\n      alert(\"agree, please\");\n    }\n  }\n\n  handleChangeCheckbox() {\n    this.setState({\n      isAgree: !this.state.isAgree\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"email\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: this.state.isAgree,\n      onChange: this.handleChangeCheckbox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst Task = () => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(UncontrolledForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(ControlledForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }));\n};\n\nexport default Task;","map":{"version":3,"sources":["/home/taras/OsSystem/task8/reactCourses/src/components/lessons/8/forms/3/index.js"],"names":["React","UncontrolledForm","Component","constructor","props","handleSubmit","event","preventDefault","emailRef","agreeRef","email","current","value","agreeCheckbox","checked","alert","bind","createRef","render","ControlledForm","state","isAgree","handleChange","handleChangeCheckbox","setState","target","Task"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass UncontrolledForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.emailRef = React.createRef();\n    this.agreeRef = React.createRef();\n\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { emailRef, agreeRef } = this;\n    const email = emailRef.current.value;\n    const agreeCheckbox = agreeRef.current.checked;\n\n    if (!email) {\n      alert(`entry valid email first, please`);\n    }\n\n    if (agreeCheckbox) {\n      alert(`email: ${email}`);\n    } else {\n      alert(`agree, please`);\n    }\n  };\n\n  render() {\n    const { emailRef, agreeRef } = this;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input type=\"email\" ref={emailRef} />\n        <input type=\"checkbox\" ref={agreeRef} />\n      </form>\n    );\n  }\n}\n\nclass ControlledForm extends React.Component {\n  // your code is here\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\",\n      isAgree: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChangeCheckbox = this.handleChangeCheckbox.bind(this);\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n\n    if (this.state.isAgree) {\n      alert(\"Email was submitted: \" + this.state.value);\n    } else {\n      alert(\"agree, please\");\n    }\n  }\n\n  handleChangeCheckbox() {\n    this.setState({ isAgree: !this.state.isAgree });\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          type=\"email\"\n          value={this.state.value}\n          onChange={this.handleChange}\n        />\n        <input\n          type=\"checkbox\"\n          checked={this.state.isAgree}\n          onChange={this.handleChangeCheckbox}\n        />\n      </form>\n    );\n  }\n}\n\nconst Task = () => {\n  return (\n    <div>\n      <UncontrolledForm/>\n      <ControlledForm/>\n    </div>\n  );\n};\n\nexport default Task;\n"]},"metadata":{},"sourceType":"module"}